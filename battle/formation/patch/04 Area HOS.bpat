#import scrdtrio_enemy/27_BanditA.bpat

@ $FormationTable {
    $SJIS_802260B4 00000001 $Formation_00 $Stage_80225E30 00000000
    $SJIS_802260A8 00000003 $Formation_01 $Stage_802255B0 00000000
    $SJIS_8022609C 00000003 $Formation_02 $Stage_802255B0 00000000
    $SJIS_80226080 00000001 $Formation_03 $Stage_80225E30 00000000
    00000000 00000000 00000000 00000000 00000000
}
@ $Formation_03
{
	$NepEnut 00000001 0000000A 00000000 00000000 00000000 00000000
}
#new:Actor $NepEnut
{
	% stats
	[Index]         B5b
	[Level]         40`b
	[MaxHP]         25`b
	[Coins]         0`b
	[Flags]       00000004
	[StatusTable] $StatusTable_NepEnut
	% ai
	[PartsCount]    6`s
	[PartsTable]  $PartsTable_NepEnut
	[Script]      $Script_Init_NepEnut
	% move effectiveness
	[Escape]       0`b
	[Item]        100`b
	[AirLift]     100`b
	[Hurricane]    90`b % Bow's "Spook" as well
	[UpAndAway]    95`b
	[PowerBounce] 100`b
	[SpinSmash]     4`b % weight (0-4)
	% ui positions
	[Size]         24`b  24`b % width height
	[HealthBar]     0`b   0`b % dx dy
	[StatusTurn]  -33`b  78`b % dx dy
	[StatusIcon]   10`b  75`b % dx dy
}
#new:Function $GetSalmosBack
{
    PUSH      t1
    LIA       t1, 7
    SAB       t1, 8010F2A2
    POP       t1
    JR        RA
    LI        V0, 2
}
#new:StatusTable $StatusTable_NepEnut
{
	.Status:Normal      0`
	.Status:Default     0`
	.Status:Sleep     0`
	.Status:Poison    0`
	.Status:Frozen    30`
	.Status:Dizzy     50`
	.Status:Fear      0`
	.Status:Static    20`
	.Status:Paralyze  20`
	.Status:Shrink    0`
	.Status:Stop      40`
	.Status:DefaultTurnMod    0`
	.Status:SleepTurnMod      0`
	.Status:PoisonTurnMod     0`
	.Status:FrozenTurnMod     0`
	.Status:DizzyTurnMod      0`
	.Status:FearTurnMod       0`
	.Status:StaticTurnMod     0`
	.Status:ParalyzeTurnMod   0`
	.Status:ShrinkTurnMod     0`
	.Status:StopTurnMod       0`
	.Status:End
}
#new:PartsTable $PartsTable_NepEnut
{
	00800000 01000000 001400FF $IdleAnimations_NepEnut $DefenseTable_NepEnut 00000000 00000000 00F60000 00000000
  00120001 02000000 001800FF $IdleAnimations_NepEnutPart1 $DefenseTable_NepEnutPart1 00000000 00000000 FFF60000 00000000
	00120001 03000000 001800FF $IdleAnimations_NepEnutPart1 $DefenseTable_NepEnutPart1 00000000 00000000 FFF60000 00000000
  00120001 04000000 001800FF $IdleAnimations_NepEnutPart1 $DefenseTable_NepEnutPart1 00000000 00000000 FFF60000 00000000
	00120001 05000000 001800FF $IdleAnimations_NepEnutPart1 $DefenseTable_NepEnutPart1 00000000 00000000 FFF60000 00000000
  00120001 06000000 001800FF $IdleAnimations_NepEnutPart2 $DefenseTable_NepEnutPart1 00000000 00000000 FFF60000 00000000
}
#new:DefenseTable $DefenseTable_NepEnut
{
	.Element:Normal 00000000
	.Element:End
}
#new:DefenseTable $DefenseTable_NepEnutPart1
{
	.Element:Normal 00000000
	.Element:Water  FFFFFFFE
	.Element:Ice    FFFFFFFE
	.Element:Fire   00000063
	.Element:Blast  FFFFFFFF
	.Element:End
}
#new:IdleAnimations $IdleAnimations_NepEnut
{
	.Status:Normal    00C10001
	.Status:Stone     00C10000
	.Status:Sleep     00C10008
	.Status:Poison    00C10001
	.Status:Stop      00C10000
	.Status:Static    00C10001
	.Status:Paralyze  00C10000
	.Status:Dizzy     00C10007
	.Status:Fear      00C10007
	.Status:End
}
#new:IdleAnimations $IdleAnimations_NepEnutPart1
{
	.Status:Normal    00C10009
	.Status:End
}
#new:IdleAnimations $IdleAnimations_NepEnutPart2
{
	.Status:Normal    00C1000A
	.Status:End
}
#new:Script $Script_Init_NepEnut
{
        Call  SetTargetOffset ( .Actor:Self 1 0 55` )
    0:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_NepEnut )
   14:  Call  BindIdle      ( .Actor:Self $Script_Idle_NepEnut )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_NepEnut )
   3C:  Call  SetActorVar   ( .Actor:Self 00000008 00000000 )
   B0:  Call  SetPartScale  ( .Actor:Self 00000002 *Fixed[1.5] *Fixed[1.5] *Fixed[1.5] )
   D0:  Call  SetPartScale  ( .Actor:Self 00000003 *Fixed[1.5] *Fixed[1.5] *Fixed[1.5] )
        Call  GetActorPos ( .Actor:Self *Var1 *Var2 *Var3 )
        Sub   *Var2 20`
        Add   *Var1 5`
        Call  ForceHomePos  ( .Actor:Self *Var1 *Var2 *Var3 )
        Call  $GetSalmosBack ( )
   54:  Return
   5C:  End
}
#new:Script $Script_Idle_NepEnut
{
  Return
  End
}
#new:Script $Script_SmallWaterDrops
{
  Set   *VarF  00000001
  0:  Call  UseIdleAnimation  ( .Actor:Self .False )
  14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
  28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
  3C:  Call  UseBattleCamPreset    ( 0000003F )
  4C:  Call  BattleCamTargetActor  ( .Actor:Self )
  5C:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
 1D0:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
 %Lucky
 1F4:  Switch  *Var0
 200:  	CaseOR  ==  .HitResult:Miss % 6
 20C:  	CaseOR  ==  .HitResult:Lucky % 5
 218:  		Set   *VarA  *Var0
 228:  		Call  SetAnimation  ( .Actor:Self 00000001 00C10006 )
 240:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
 25C:  		Sub   *Var0  00000005
 26C:  		Add   *Var1  00000014
 27C:  		Add   *Var2  00000002
 28C:  		Call  SetGoalToTarget   ( .Actor:Self )
 29C:  		Call  GetGoalPos    ( .Actor:Self *Var3 *Var4 *Var5 )
 2B8:  		Sub   *Var3  00000064
 2C8:  		Add   *Var5  00000002
 2D8:  		ExecWait  $Script_8021A218
 2E4:  		If  *VarA  ==  00000005
 2F4:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
 318:  		EndIf
 320:  		Wait  20`
 32C:  		Call  UseBattleCamPreset    ( 00000002 )
 33C:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
 358:  		Call  SetActorYaw   ( .Actor:Self 000000B4 )
 36C:  		ExecWait  $Script_80219464
 378:  		Wait  20`
 384:  		Call  SetActorYaw   ( .Actor:Self 00000000 )
 398:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
 3B0:  		Call  EnableIdleScript      ( .Actor:Self 00000001 )
 3C4:  		Call  UseIdleAnimation      ( .Actor:Self .True )
 3D8:  		Return
 3E0:  	EndCaseGroup
 3E8:  EndSwitch
%Lucky End
 3F0:  Call  SetAnimation      ( .Actor:Self 00000001 00C10002 )
       Wait  30`
 408:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
 424:  Sub   *Var0  00000005
 434:  Add   *Var1  00000014
 444:  Add   *Var2  00000002
 454:  Call  SetGoalToTarget   ( .Actor:Self )
 464:  Call  GetGoalPos        ( .Actor:Self *Var3 *Var4 *Var5 )
 480:  Sub   *Var4  00000006
 490:  Add   *Var5  00000002
 4A0:  ExecWait  $Script_8021A218 %Spitting the parts
 4AC:  Wait  2`
 4B8:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact|Water 00000000 00000000 00000002 00000020 )
       Call  SetAnimation      ( .Actor:Self 00000001 00C10001 )
 4E0:  Wait  20`
 4EC:  Switch  *Var0
 4F8:  	CaseOR  ==  .HitResult:Hit % 0
 504:  	CaseOR  ==  00000002 % 2
 510:  		Call  UseBattleCamPreset    ( 00000002 )
 520:  		ExecWait  $Script_80219464
 52C:  	EndCaseGroup
 534:  EndSwitch
 53C:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
 550:  Call  UseIdleAnimation  ( .Actor:Self .True )
 564:  Return
 56C:  End
}
#new:Script $Script_WaterDrop
{
  0:  Call  UseIdleAnimation  ( .Actor:Self .False )
  14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
  28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
  3C:  Call  UseBattleCamPreset    ( 0000003F )
  4C:  Call  BattleCamTargetActor  ( .Actor:Self )
  5C:  Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
 1D0:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
 %Lucky
 1F4:  Switch  *Var0
 200:  	CaseOR  ==  .HitResult:Miss % 6
 20C:  	CaseOR  ==  .HitResult:Lucky % 5
 218:  		Set   *VarA  *Var0
 228:  		Call  SetAnimation  ( .Actor:Self 00000001 00C10006 )
 240:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
 25C:  		Sub   *Var0  00000005
 26C:  		Add   *Var1  00000014
 27C:  		Add   *Var2  00000002
 28C:  		Call  SetGoalToTarget   ( .Actor:Self )
 29C:  		Call  GetGoalPos    ( .Actor:Self *Var3 *Var4 *Var5 )
 2B8:  		Sub   *Var3  00000064
 2C8:  		Add   *Var5  00000002
 2D8:  		ExecWait  $Script_8021A218
 2E4:  		If  *VarA  ==  00000005
 2F4:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
 318:  		EndIf
 320:  		Wait  20`
 32C:  		Call  UseBattleCamPreset    ( 00000002 )
 33C:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
 358:  		Call  SetActorYaw   ( .Actor:Self 000000B4 )
 36C:  		ExecWait  $Script_80219464
 378:  		Wait  20`
 384:  		Call  SetActorYaw   ( .Actor:Self 00000000 )
 398:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
 3B0:  		Call  EnableIdleScript      ( .Actor:Self 00000001 )
 3C4:  		Call  UseIdleAnimation      ( .Actor:Self .True )
 3D8:  		Return
 3E0:  	EndCaseGroup
 3E8:  EndSwitch
%Lucky End
 3F0:  Call  SetAnimation      ( .Actor:Self 00000001 00C10002 )
       Wait  30`
 408:  Call  GetActorPos       ( .Actor:Self *Var0 *Var1 *Var2 )
 424:  Sub   *Var0  00000005
 434:  Add   *Var1  00000014
 444:  Add   *Var2  00000002
 454:  Call  SetGoalToTarget   ( .Actor:Self )
 464:  Call  GetGoalPos        ( .Actor:Self *Var3 *Var4 *Var5 )
 480:  Sub   *Var4  00000006
 490:  Add   *Var5  00000002
 4A0:  ExecWait  $SpittingWaterDrop %Spitting the parts
 4AC:  Wait  2`
 4B8:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact|Water 00000000 00000000 00000003 00000020 )
       Call  SetAnimation      ( .Actor:Self 00000001 00C10001 )
 4E0:  Wait  20`
 4EC:  Switch  *Var0
 4F8:  	CaseOR  ==  .HitResult:Hit % 0
 504:  	CaseOR  ==  00000002 % 2
 510:  		Call  UseBattleCamPreset    ( 00000002 )
 520:  		ExecWait  $Script_80219464
 52C:  	EndCaseGroup
 534:  EndSwitch
 53C:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
 550:  Call  UseIdleAnimation  ( .Actor:Self .True )
 564:  Return
 56C:  End
}
#new:Script $Script_8021A218
{
    0:  Exec  $Script_8021A074
    C:  Call  GetDistanceToGoal ( .Actor:Self *Var0 )
   20:  DivF  *Var0  *Fixed[8.0]
   30:  Add   *Var0  00000001
   40:  Wait  *Var0
   4C:  Return
   54:  End
}
#new:Script $SpittingWaterDrop
{
    0:  Exec  $WaterDropProcess
    C:  Call  GetDistanceToGoal ( .Actor:Self *Var0 )
   20:  DivF  *Var0  *Fixed[8.0]
   30:  Add   *Var0  00000001
   40:  Wait  *Var0
   4C:  Return
   54:  End
}
#new:Script $Script_8021A074
{
    0:  Set   *Var6  00000002
   10:  Loop  00000004
   1C:  	Thread
   24:  		Call  GetStatusFlags    ( .Actor:Self *VarA )
   38:  		If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
   48:  			Call  SetPartScale  ( .Actor:Self *Var6 *Fixed[0.2] *Fixed[0.2] *Fixed[0.2] )
   68:  		Else
   70:  			Call  SetPartScale  ( .Actor:Self *Var6 *Fixed[0.5] *Fixed[0.5] *Fixed[0.5] )
   90:  		EndIf
   98:  		Call  SetPartPos        ( .Actor:Self *Var6 *Var0 *Var1 *Var2 )
            Call  SetPartRotation ( .Actor:Self *Var6 0 0 -40` )
   B8:  		Call  SetPartFlagBits   ( .Actor:Self *Var6 00000001 .False )
   D4:  		Call  SetPartMoveSpeed  ( .Actor:Self *Var6 *Fixed[8.0] )
   EC:  		Call  SetPartJumpGravity    ( .Actor:Self *Var6 *Fixed[0.01] )
  104:  		Call  SetPartSounds     ( .Actor:Self *Var6 .ActorSound:Jump 000002D0 00000000 )
            Call  SetAnimation      ( .Actor:Self 00000001 00C10005 )
  124:  		Call  JumpPartTo        ( .Actor:Self *Var6 *Var3 *Var4 *Var5 00000000 .False )
  14C:  		Call  SetPartFlagBits   ( .Actor:Self *Var6 00000001 .True )
  168:  	EndThread
  170:  	Wait  3`
  17C:  	Add   *Var6  00000001
  18C:  EndLoop
  194:  Return
  19C:  End
}
#new:Script $WaterDropProcess
{
   24:  		Call  GetStatusFlags    ( .Actor:Self *VarA )
   38:  		If  *VarA  &  ~Flags:StatusFlags:Shrink % 80000
   48:  			Call  SetPartScale  ( .Actor:Self 00000006 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
   68:  		Else
   70:  			Call  SetPartScale  ( .Actor:Self 00000006 *Fixed[0.1] *Fixed[0.1] *Fixed[0.1] )
              Thread
                Call  SetPartScale  ( .Actor:Self 00000006 *Fixed[0.2] *Fixed[0.2] *Fixed[0.2] )
                Wait 1`
                Call  SetPartScale  ( .Actor:Self 00000006 *Fixed[0.3] *Fixed[0.3] *Fixed[0.3] )
                Wait 1`
                Call  SetPartScale  ( .Actor:Self 00000006 *Fixed[0.4] *Fixed[0.4] *Fixed[0.4] )
                Wait 1`
                Call  SetPartScale  ( .Actor:Self 00000006 *Fixed[0.5] *Fixed[0.5] *Fixed[0.5] )
                Wait 1`
                Call  SetPartScale  ( .Actor:Self 00000006 *Fixed[0.6] *Fixed[0.6] *Fixed[0.6] )
                Wait 1`
                Call  SetPartScale  ( .Actor:Self 00000006 *Fixed[0.7] *Fixed[0.7] *Fixed[0.7] )
                Wait 1`
                Call  SetPartScale  ( .Actor:Self 00000006 *Fixed[0.8] *Fixed[0.8] *Fixed[0.8] )
                Wait 1`
                Call  SetPartScale  ( .Actor:Self 00000006 *Fixed[0.9] *Fixed[0.9] *Fixed[0.9] )
              EndThread
   90:  		EndIf
   98:  		Call  SetPartPos        ( .Actor:Self 00000006 *Var0 *Var1 *Var2 )
            Set   *VarE   -80`
            Thread
             Loop 10`
              Add *VarE 3`
              Call  SetPartRotation ( .Actor:Self 00000006 0 0 *VarE )
              Add *VarE 3`
              Wait 1`
             EndLoop
              Call  SetPartRotation ( .Actor:Self 00000006 0 0 0 )
            EndThread 
   B8:  		Call  SetPartFlagBits   ( .Actor:Self 00000006 00000001 .False )
   D4:  		Call  SetPartMoveSpeed  ( .Actor:Self 00000006 *Fixed[8.0] )
   EC:  		Call  SetPartJumpGravity    ( .Actor:Self 00000006 *Fixed[1.0] )
  104:  		Call  SetPartSounds     ( .Actor:Self 00000006 .ActorSound:Jump 000002D0 00000000 )
            Call  SetAnimation      ( .Actor:Self 00000001 00C10005 )
            Add   *Var3 38`
            Add   *Var4 48`
  124:  		Call  JumpPartTo        ( .Actor:Self 00000006 *Var3 *Var4 *Var5 00000000 .False )
            Call  SetPartScale  ( .Actor:Self 00000006 *Fixed[1.0] *Fixed[1.0] *Fixed[1.0] )
            Sub   *Var3 38`
            Sub   *Var4 48`
            Call  JumpPartTo        ( .Actor:Self 00000006 *Var3 *Var4 *Var5 00000000 .False )
  14C:  		Call  SetPartFlagBits   ( .Actor:Self 00000006 00000001 .True )
  194:  Return
  19C:  End
}
#new:Script $Script_80219464
{
    0:  Call  SetAnimation  ( .Actor:Self 00000001 00460003 )
   18:  Call  SetGoalToHome ( .Actor:Self )
   28:  Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
   3C:  Thread
   44:  	%Call  $Function_80218000 ( )
   50:  EndThread
   58:  Call  FlyToGoal     ( .Actor:Self 00000000 00000001 .Easing:SinOut )
   74:  Call  SetAnimation  ( .Actor:Self 00000001 00460001 )
   8C:  Return
   94:  End
}
#new:Script $Script_TakeTurn_NepEnut
{
    0:  Call  GetActorHP    ( .Actor:Self *Var0 )
   14:  Call  GetEnemyMaxHP ( .Actor:Self *Var1 )
   28:  MulF  *Var0  *Fixed[100.0]
   38:  DivF  *Var0  *Var1
   48:  If  *Var0  >  00000032
          Call RandInt ( 00000001 *VarB )
          If *VarB == 00000001
          ExecWait  $Script_SmallWaterDrops
          Else
          ExecWait  $Script_WaterDrop
          EndIf
   64:  Else
          If *NepEnutBattleFlood == .False
          If *NepEnutBattlePreparing == .False
          Call RandInt ( 00000003 *VarB )
   6C:  	Switch *VarB 
            Case == 00000000
            ExecWait  $Script_SmallWaterDrops
            Case == 00000001
            ExecWait  $Script_WaterDrop
            Case >= 00000002
            ExecWait  $Script_Preparing
          EndSwitch
          Else
          Call  PlayEffect    ( 0000005D 00000000 00000000 00000000 00000000 00000000 00000000 00000000 0000000A 00000000 00000000 00000000 00000000 )
          Set *NepEnutBattlePreparing .False
          Set *NepEnutBattleFlood .True
          EndIf
          Else
          Call RandInt ( 00000002 *VarB )
   6C:      Switch *VarB 
            Case == 00000000
            ExecWait  $Script_SmallWaterDrops
            Case >= 00000001
            ExecWait  $Script_WaterDrop
            EndSwitch
          EndIf
   78:  EndIf
   80:  Return
   88:  End
}
#new:Script $Script_Preparing
{
  0:  Call  UseIdleAnimation  ( .Actor:Self .False )
  14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
  28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
  3C:  Call  UseBattleCamPreset    ( 0000003F )
  4C:  Call  BattleCamTargetActor  ( .Actor:Self )
       Call  SetAnimation ( .Actor:Self 00000001 00C10003 )
       Wait  16`
       Set *NepEnutBattlePreparing .True
 564:  Return
 56C:  End
}
#new:Script $Script_HandleEvent_NepEnut
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0
   48:  	CaseOR  ==  .Event:HitCombo % 9
   54:  	CaseOR  ==  .Event:Hit % A
   60:  		SetConst  *Var0  00000001
   70:  		SetConst  *Var1  00C10006
   80:  		ExecWait  DoNormalHit
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:BurnHit % E
   A0:  		SetConst  *Var0  00000001
   B0:  		SetConst  *Var1  00C10006
   C0:  		SetConst  *Var2  00C10006
   D0:  		ExecWait  DoBurnHit
   DC:  	Case  ==  .Event:BurnDeath % 24
   E8:  		SetConst  *Var0  00000001
   F8:  		SetConst  *Var1  00C10006
  108:  		SetConst  *Var2  00C10006
  118:  		ExecWait  DoBurnHit
  124:  		SetConst  *Var0  00000001
  134:  		SetConst  *Var1  00C10006
  144:  		ExecWait  DoDeath
  150:  		Return
  158:  	Case  ==  .Event:SpinSmashHit % B
  164:  		SetConst  *Var0  00000001
  174:  		SetConst  *Var1  00C10006
  184:  		ExecWait  DoSpinSmashHit
  190:  	Case  ==  .Event:SpinSmashDeath % 21
  19C:  		SetConst  *Var0  00000001
  1AC:  		SetConst  *Var1  00C10006
  1BC:  		ExecWait  DoSpinSmashHit
  1C8:  		SetConst  *Var0  00000001
  1D8:  		SetConst  *Var1  00C10006
  1E8:  		ExecWait  DoDeath
  1F4:  		Return
  1FC:  	CaseOR  ==  00000017 % 17
  208:  	CaseOR  ==  .Event:Immune % 19
  214:  		SetConst  *Var0  00000001
  224:  		SetConst  *Var1  00C10006
  234:  		ExecWait  DoImmune
  240:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  254:  		If  *Var0  !&  ~Flags:StatusFlags:Sleep|Frozen|Paralyze|Dizzy|Stone|Stop % 35D000
  264:  			Call  SetAnimation  ( .Actor:Self 00000001 00C10001 )
  27C:  			Wait  10`
  288:  		EndIf
  290:  	EndCaseGroup
  298:  	Case  ==  .Event:Death % 20
  2A4:  		SetConst  *Var0  00000001
  2B4:  		SetConst  *Var1  00C10007
  2C4:  		ExecWait  DoNormalHit
  2D0:  		Wait  10`
  2DC:  		SetConst  *Var0  00000001
  2EC:  		SetConst  *Var1  00C10007
  2FC:  		ExecWait  DoDeath
  308:  		Return
  310:  	Case  ==  .Event:RecoverStatus % 31
  31C:  		SetConst  *Var0  00000001
  32C:  		SetConst  *Var1  00C10006
  33C:  		ExecWait  DoRecover
  348:  	Case  ==  .Event:ScareAway % 39
  354:  		SetConst  *Var0  00000001
  364:  		SetConst  *Var1  005A0007
  374:  		SetConst  *Var2  00C10006
  384:  		ExecWait  DoScareAway
  390:  		Return
  398:  	Case  ==  .Event:BeginAirLift % 3A
  3A4:  		SetConst  *Var0  00000001
  3B4:  		SetConst  *Var1  00C10006
  3C4:  		ExecWait  DoAirLift
  3D0:  	Case  ==  .Event:BlowAway % 16
  3DC:  		Call  GetStatusFlags    ( .Actor:Self *Var0 )
  3F0:  		If  *Var0  !&  ~Flags:StatusFlags:Sleep|Frozen|Paralyze|Dizzy|Stone|Stop % 35D000
  400:  			If  *Var0  &  ~Flags:StatusFlags:Shrink % 80000
  410:  				Call  SetActorDispOffset    ( .Actor:Self FFFFFFFE 00000001 00000000 )
  42C:  			Else
  434:  				Call  SetActorDispOffset    ( .Actor:Self FFFFFFFB 00000003 00000000 )
  450:  			EndIf
  458:  		EndIf
  460:  		SetConst  *Var0  00000001
  470:  		SetConst  *Var1  00C10006
  480:  		ExecWait  DoBlowAway
  48C:  		Return
  494:  	Case  ==  .Event:AirLiftFailed % 1F
  4A0:  		SetConst  *Var0  00000001
  4B0:  		SetConst  *Var1  00C10006
  4C0:  		ExecWait  DoImmune
  4CC:  	Default
  4D4:  EndSwitch
  4DC:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  4F0:  Call  UseIdleAnimation  ( .Actor:Self .True )
  504:  Return
  50C:  End
}
#new:Script $Script_NepEnut1
{
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  SetTargetActor    ( .Actor:Self .Actor:Player )
   3C:  Call  GetBattlePhase    ( *Var0 )
   4C:  If  *Var0  ==  00000001
   5C:  	Call  UseBattleCamPreset    ( 00000002 )
   6C:  	Call  MoveBattleCamOver     ( 00000001 )
   7C:  EndIf
    	  Call  SetAnimation ( .Actor:Self 00000001 00C10002 )
        Wait 35`
        Call  SetAnimation ( .Actor:Self 00000001 00C10005 )
        Call  SetPartPos   ( .Actor:Self 00000002 -20` 50` -20` )
        Call  JumpPartTo    ( .Actor:Self 00000002 -60` 30` -20` 00000014 .True )
        Call  SetGoalToTarget   ( .Actor:Self )
        Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:NoContact 00000000 00000000 00000001 00000020 )
   84:  Call  GetBattlePhase    ( *Var0 )
  840:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  854:  Call  UseIdleAnimation  ( .Actor:Self .True )
        Call UseIdleAnimation  ( .Actor:Player .True )
  868:  Return
  870:  End
}
#new:Script $Flood
{
  Call  GetActorPos   ( .Actor:Player *Var0 *Var1 *Var2 )
  Add   *Var0  0000000A
  Add   *Var1  0000000B
  Call  GetGoalPos    ( .Actor:Player *Var3 *Var4 *Var5 )
  Call  PlayEffect    ( 0000005D *Var0 *Var1 *Var2 *Var3 *Var4 *Var5 *VarE 0000000A 00000000 00000000 00000000 00000000 )
  Set *NepEnutBattlePreparing .False
  Set *NepEnutBattleFlood .True
  Return
  End
}

@ $Formation_01
{
	$27_BanditA 00000001 0000000A 00000000 00000000 00000000 00000000
	$27_BanditA 00000002 00000009 00000000 00000000 00000000 00000000
    $27_BanditA 00000003 00000008 00000000 00000000 00000000 00000000
}
@ $27_BanditA {
    % stats
    [Index]        13b 
    [Level]         9`b 
    [MaxHP]         3`b 
    [Coins]         1`b 
    [Flags]       00000000 
    [StatusTable] $StatusTable_80221610_27 
    % ai
    [PartsCount]    2`s 
    [PartsTable]  $PartsTable_802216BC_27 
    [Script]      $Script_Init_802217A0_27 
    % move effectiveness
    [Escape]       40`b 
    [Item]         90`b 
    [AirLift]      90`b 
    [Hurricane]    90`b % Bow's "Spook" as well
    [UpAndAway]    95`b 
    [PowerBounce]  80`b 
    [SpinSmash]     0`b % weight (0-4)
    % ui positions
    [Size]         26`b  32`b % width height
    [HealthBar]     0`b   0`b % dx dy
    [StatusTurn]  -10`b  25`b % dx dy
    [StatusIcon]   10`b  25`b % dx dy
    }
    
    @ $Stage_80225E30 {
    	$ASCII_80226078  % hos_tex
        $ASCII_80226068  % hos_bt02_shape
        $ASCII_80226058  % hos_bt02_hit
        $Script_BeforeBattle_802258E0
        $Script_AfterBattle_80225E20
        "hos_bg"  % nok_bg
        00000000
        00000000
        00000000
        00000000
    }
    @ $Script_BeforeBattle_80224BD0 {
    	0:  Thread
            8:  	Call  SetTexPanner  ( ~Model:hos_bt01:o372 00000001 )
           1C:  	Call  SetTexPanner  ( ~Model:hos_bt01:o375 00000001 )
           30:  	Set   *Var0  00000000
           40:  	Set   *Var1  00000000
           50:  	Set   *Var2  00000000
           60:  	Set   *Var3  00000000
           70:  	Loop
           7C:  		Add   *Var0  FFFFFFCE
           8C:  		Add   *Var1  0000012C
           9C:  		Add   *Var2  0000005A
           AC:  		Add   *Var3  FFFFFF38
           BC:  		Call  SetTexPanOffset   ( 00000001 00000000 *Var0 *Var1 )
           D8:  		Call  SetTexPanOffset   ( 00000001 00000001 *Var2 *Var3 )
           F4:  		Wait  1`
          100:  	EndLoop
          108:  EndThread
          110:  Thread
          118:  	Set   *VarA  00000000
          128:  	Label  2
          134:  	Call  MakeLerp  ( FFFFFFF9 00000007 00000028 .Easing:CosInOut )
          150:  	Label  0
          15C:  	Call  UpdateLerp ( )
          168:  	Call  TranslateModel    ( ~Model:hos_bt01:o371 00000000 *Var0 00000000 )
          184:  	Call  TranslateModel    ( ~Model:hos_bt01:o372 00000000 *Var0 00000000 )
          1A0:  	Mul   *Var0  00000003
          1B0:  	Call  RotateModel       ( ~Model:hos_bt01:o371 *VarA 00000000 00000000 00000001 )
          1D0:  	Add   *VarA  FFFFFFFD
          1E0:  	Call  ClampAngleFloat   ( *VarA )
          1F0:  	Wait  1`
          1FC:  	If  *Var1  ==  00000001
          20C:  		Goto  0
          218:  	EndIf
          220:  	Call  MakeLerp  ( 00000007 FFFFFFF9 00000028 .Easing:CosInOut )
          23C:  	Label  1
          248:  	Call  UpdateLerp ( )
          254:  	Call  TranslateModel    ( ~Model:hos_bt01:o371 00000000 *Var0 00000000 )
          270:  	Call  TranslateModel    ( ~Model:hos_bt01:o372 00000000 *Var0 00000000 )
          28C:  	Mul   *Var0  00000003
          29C:  	Call  RotateModel       ( ~Model:hos_bt01:o371 *VarA 00000000 00000000 00000001 )
          2BC:  	Add   *VarA  FFFFFFFD
          2CC:  	Call  ClampAngleFloat   ( *VarA )
          2DC:  	Wait  1`
          2E8:  	If  *Var1  ==  00000001
          2F8:  		Goto  1
          304:  	EndIf
          30C:  	Goto  2
          318:  EndThread
          320:  Thread
          328:  	Set   *VarA  00000000
          338:  	Label  2
          344:  	Call  MakeLerp  ( FFFFFFF6 00000004 00000028 .Easing:CosInOut )
          360:  	Label  0
          36C:  	Call  UpdateLerp ( )
          378:  	Call  TranslateModel    ( ~Model:hos_bt01:o376 00000000 *Var0 00000000 )
          394:  	Call  TranslateModel    ( ~Model:hos_bt01:o375 00000000 *Var0 00000000 )
          3B0:  	Mul   *Var0  FFFFFFFD
          3C0:  	Call  RotateModel       ( ~Model:hos_bt01:o376 *VarA 00000000 00000000 00000001 )
          3E0:  	Add   *VarA  FFFFFFFD
          3F0:  	Call  ClampAngleFloat   ( *VarA )
          400:  	Wait  1`
          40C:  	If  *Var1  ==  00000001
          41C:  		Goto  0
          428:  	EndIf
          430:  	Call  MakeLerp  ( 00000004 FFFFFFF6 00000028 .Easing:CosInOut )
          44C:  	Label  1
          458:  	Call  UpdateLerp ( )
          464:  	Call  TranslateModel    ( ~Model:hos_bt01:o376 00000000 *Var0 00000000 )
          480:  	Call  TranslateModel    ( ~Model:hos_bt01:o375 00000000 *Var0 00000000 )
          49C:  	Mul   *Var0  FFFFFFFD
          4AC:  	Call  RotateModel       ( ~Model:hos_bt01:o376 *VarA 00000000 00000000 00000001 )
          4CC:  	Add   *VarA  FFFFFFFD
          4DC:  	Call  ClampAngleFloat   ( *VarA )
          4EC:  	Wait  1`
          4F8:  	If  *Var1  ==  00000001
          508:  		Goto  1
          514:  	EndIf
          51C:  	Goto  2
          528:  EndThread
          530:  Return
          538:  End
    }
    @ $Formation_00 {
    	$Ember 00000001 0000000A 00000000 00000000 00000000 00000000
    }
    